name: Publish to npm

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm run build

      - name: Check version difference
        id: version-check
        run: |
          PACKAGE_PATH="./packages/sdk"
          PACKAGE_JSON="$PACKAGE_PATH/package.json"

          CURRENT_VERSION=$(node -p "require('$PACKAGE_JSON').version")
          PACKAGE_NAME=$(node -p "require('$PACKAGE_JSON').name")

          PUBLISHED_VERSION=$(npm view "$PACKAGE_NAME" version 2>/dev/null || echo "0.0.0")
          PUBLISHED_VERSION=$(echo "$PUBLISHED_VERSION" | tr -d '"')

          RESULT=$(node -e "const semver=require('semver');process.exit(semver.gt('$CURRENT_VERSION','$PUBLISHED_VERSION') ? 0 : 1)")
          
          if [ "$RESULT" -eq 0 ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.should_publish == 'true'
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
